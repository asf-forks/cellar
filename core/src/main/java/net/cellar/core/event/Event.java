package net.cellar.core.event;

import net.cellar.core.Node;

import java.io.Serializable;
import java.util.List;

/**
 * Represents an event that is broadcasted to the cluster.
 * The event is always generated by a single node (source) but can have none or multiple destinations.
 * @author: iocanel
 */
public class Event implements Serializable {

	protected String id;
	protected Node source;
	protected List<Node> destination;
	protected Boolean bypassSwitches=Boolean.FALSE;

	/**
	 * Constructor
	 * @param id
	 */
	public Event(String id) {
		this.id = id;
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public Node getSource() {
		return source;
	}

	public void setSource(Node source) {
		this.source = source;
	}

	public List<Node> getDestination() {
		return destination;
	}

	public void setDestination(List<Node> destination) {
		this.destination = destination;
	}

	public Boolean getBypassSwitches() {
		return bypassSwitches;
	}
}
