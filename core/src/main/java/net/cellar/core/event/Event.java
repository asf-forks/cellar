package net.cellar.core.event;

import net.cellar.core.Group;
import net.cellar.core.Node;

import java.io.Serializable;
import java.util.Set;

/**
 * Represents an event that is broadcasted to the cluster.
 * The event is always generated by a single node (source) but can have none or multiple destinations.
 *
 * @author: iocanel
 */
public class Event implements Serializable {

    protected String id;
    protected Node sourceNode;
    protected Group sourceGroup;
    protected Set<Node> destination;
    protected Boolean force = Boolean.FALSE;
    protected Boolean postPublish = Boolean.FALSE;

    /**
     * Constructor
     *
     * @param id
     */
    public Event(String id) {
        this.id = id;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Node getSourceNode() {
        return sourceNode;
    }

    public void setSourceNode(Node sourceNode) {
        this.sourceNode = sourceNode;
    }

    public Group getSourceGroup() {
        return sourceGroup;
    }

    public void setSourceGroup(Group sourceGroup) {
        this.sourceGroup = sourceGroup;
    }

    public Set<Node> getDestination() {
        return destination;
    }

    public void setDestination(Set<Node> destination) {
        this.destination = destination;
    }

    public Boolean getForce() {
        return force;
    }

    public void setForce(Boolean force) {
        this.force = force;
    }

    public Boolean getPostPublish() {
        return postPublish;
    }

    public void setPostPublish(Boolean postPublish) {
        this.postPublish = postPublish;
    }
}
